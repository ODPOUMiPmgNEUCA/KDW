# -*- coding: utf-8 -*-
"""Soczyste rabaty.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfU5lwdNa2GOPWmQ9-URaf30VnlBzQC0
"""

#importowanie potrzebnych bibliotek
import os
import openpyxl
import streamlit as st
import pandas as pd
import numpy as np
import altair as alt
import plotly.express as px
import plotly.graph_objects as go
from urllib.request import urlopen
import json
import io
import datetime



st.set_page_config(page_title='Łączenie danych do kalendarza', layout='wide')



tabs_font_css = """
<style>
div[class*="stTextInput"] label {
  font-size: 26px;
  color: black;
}
div[class*="stSelectbox"] label {
  font-size: 26px;
  color: black;
}
</style>
"""

st.title("Automat KDW")



################### RAPORT PROMOCYJNY ####################
df_p = st.file_uploader(
    label = "Wrzuć plik RaportPromocyjny"
)
if df_p:
    df_p = pd.read_csv(df_p, sep=';')
    st.write(df_p.head())

# Wybieranie tylko określonych kolumn z DataFrame
kolumny_p = [
    'Id Materiału', 'identyfikator promocji', 'Nazwa Promocji', 'Nr zlecenia', 'Skład (SPR,SGL)', 'Rabat Promocyjny'
]
df_p = df_p[kolumny_p]


###################### ASORTYMENT NEUCA ########################
df_a = st.file_uploader(
    label = "Wrzuć plik Asortyment Neuca"
)
if df_a:
    df_a = pd.read_excel(df_a, sheet_name='Asortyment')
    st.write(df_a.head())

# Wybieranie tylko określonych kolumn z DataFrame
kolumny_a = [
    'Indeks kartoteki', 'Cena Neuca', 'EAN', 'BLOZ'
]

df_a = df_a[kolumny_a]


####################### WSADOWY #########################
df_file = st.file_uploader(
    label="Wrzuć plik wsadowy"
)

if df_file:
    # Wczytanie arkuszy
    df_oltarzew = pd.read_excel(df_file, sheet_name='Ołtarzew')
    df_total = pd.read_excel(df_file, sheet_name='Total')

    # Funkcja do dodania kolumn
    def przetworz_wsadowy(df_wsadowy, df_p, df_a):
        dzis = pd.to_datetime(datetime.today().date())
        
        # Kolumna 0-1 jeśli mniej niż 9 miesięcy
        df_wsadowy['Data poniżej 9-ciu msc'] = df_wsadowy['Data ważności'].apply(
            lambda x: 1 if (pd.to_datetime(x) - dzis).days <= 9*30 else 0
        )
        
        # Minimalny rabat z df_p
        df_p_min = df_p.groupby('Id Materiału')['Rabat Promocyjny'].min()
        df_wsadowy['Max rabat z wolnego'] = df_wsadowy['Nr kartoteki'].map(lambda x: df_p_min.get(x, 0))
        
        # Cena z oferty Neuca
        df_a_cena = df_a.set_index('Indeks kartoteki')['Cena Neuca']
        df_wsadowy['Cena Neuca'] = df_wsadowy['Nr kartoteki'].map(lambda x: df_a_cena.get(x, 0))
        
        return df_wsadowy

    # Przetwarzamy oba arkusze
    df_oltarzew = przetworz_wsadowy(df_oltarzew, df_p, df_a)
    df_total = przetworz_wsadowy(df_total, df_p, df_a)
    
    st.write("Arkusz Ołtarzew po przetworzeniu:")
    st.write(df_oltarzew.head())
    
    st.write("Arkusz Total po przetworzeniu:")
    st.write(df_total.head())


